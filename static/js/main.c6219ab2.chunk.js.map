{"version":3,"sources":["components/Section.styled.js","components/Section.js","components/FormContacts.styled.js","components/FormContacts.js","components/Filter.js","components/ContactsList.styled.js","components/ContactsList.js","App.js","index.js"],"names":["Section","styled","section","Wrapper","children","Form","form","Label","label","SubmitBtn","button","FormContacts","state","name","number","handleChange","target","value","setState","handleSubmit","evt","preventDefault","props","onSubmitProp","reset","onSubmit","this","type","placeholder","pattern","title","required","onChange","Component","Filter","findeName","onFind","List","ul","Item","li","Btn","ContactsList","findeContact","onDelet","map","item","onClick","id","App","contacts","filter","formSubmitHundler","idList","nanoid","find","alert","prevState","filterHundler","ev","normalizedFilter","toLowerCase","includes","deletHundler","contact","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","findesContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6219ab2.chunk.js","sourcesContent":["//import styled from '@emotion/styled/types/base';\r\nimport styled from '@emotion/styled';\r\n\r\nexport const Section = styled.section`\r\n  width: 500px;\r\n  margin: 10px;\r\n  padding: 20px;\r\n  background-color: #ebdada;\r\n  box-shadow: 12px 8px 30px 2px rgba(106, 90, 90, 0.5);\r\n`;\r\n","import React from 'react';\r\nimport { Section } from './Section.styled';\r\n\r\nexport const Wrapper = ({ children }) => {\r\n  return <Section>{children}</Section>;\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Form = styled.form`\r\n  height: auto;\r\n  padding: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-bottom: 2px solid darkgrey;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  width: 200px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const SubmitBtn = styled.button`\r\n  width: 100px;\r\n  margin-bottom: 20px;\r\n  padding: 5px;\r\n`;\r\n","import React, { Component } from 'react';\r\nimport { Form, Label, SubmitBtn } from './FormContacts.styled';\r\n\r\nclass FormContacts extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  //==============================================\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  //=================================\r\n  handleSubmit = evt => {\r\n    evt.preventDefault();\r\n    // Проп который передается форме для вызова при сабмите\r\n    this.props.onSubmitProp(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  //===========================================\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Label>\r\n          <br />\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Vinny Pooch\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </Label>\r\n\r\n        <Label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            placeholder=\"+380800-00-00\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </Label>\r\n\r\n        <SubmitBtn type=\"submit\">Add contact</SubmitBtn>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\nexport default FormContacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Filter = ({ findeName, onFind }) => {\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <br />\r\n      <input\r\n        type=\"text\"\r\n        name=\"find\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        value={findeName}\r\n        onChange={onFind}\r\n      />\r\n    </label>\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  findeName: PropTypes.string,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const List = styled.ul`\r\n  list-style: none;\r\n`;\r\nexport const Item = styled.li`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-bottom: 1px solid #000;\r\n`;\r\nexport const Btn = styled.button`\r\n  display: block;\r\n  height: 30px;\r\n  width: 60px;\r\n  margin-left: 50px;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { List, Item, Btn } from './ContactsList.styled';\r\n\r\nconst ContactsList = ({ findeContact, onDelet }) => {\r\n  return (\r\n    <List>\r\n      {findeContact.map(item => (\r\n        <Item key={item.id}>\r\n          <p>\r\n            &#9742; -- {item.name}- {item.number}\r\n          </p>\r\n          <Btn onClick={() => onDelet(item.id)}>Delet</Btn>\r\n        </Item>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  findeContact: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n  ),\r\n};\r\nexport default ContactsList;\r\n","import React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport { Wrapper } from './components/Section';\nimport FormContacts from './components/FormContacts';\nimport { Filter } from './components/Filter';\nimport ContactsList from './components/ContactsList';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contactsList');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contactsList', JSON.stringify(this.state.contacts));\n    }\n  }\n  //===============================\n  formSubmitHundler = ({ name, number }) => {\n    const idList = nanoid();\n\n    const { contacts } = this.state;\n    if (contacts.find(item => item.name === name)) {\n      alert(`${name} is already in contacts`);\n    } else {\n      this.setState(prevState => ({\n        contacts: [\n          ...prevState.contacts,\n          {\n            id: idList,\n            name,\n            number,\n          },\n        ],\n      }));\n    }\n  };\n\n  filterHundler = ev => {\n    this.setState({ filter: ev.target.value });\n  };\n\n  findeContact = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(item =>\n      item.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deletHundler = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const findesContacts = this.findeContact();\n\n    return (\n      <Wrapper>\n        <h1>Phonebook </h1>\n        <FormContacts onSubmitProp={this.formSubmitHundler} />\n        <h2>Contacts</h2>\n\n        <Filter findeName={this.state.filter} onFind={this.filterHundler} />\n\n        <ContactsList\n          findeContact={findesContacts}\n          onDelet={this.deletHundler}\n        />\n      </Wrapper>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}